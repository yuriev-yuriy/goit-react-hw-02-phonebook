{"version":3,"sources":["Phonebook/ContactForm.js","Phonebook/Filter.js","Phonebook/ContactList.js","App.js","index.js","App.module.css"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","changeNameInput","event","setState","currentTarget","value","changeNumberInput","makeSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","id","type","onChange","required","className","s","Btn","Component","Filter","ContactList","contacts","delMethot","map","onClick","defaultProps","App","filter","addName","newContact","keys","contact","Object","values","toLowerCase","split","repeatedName","reduce","acc","key","concat","includes","alert","onFilterChange","getFilteredContacts","normalizedFilter","deleteItem","prevState","filteredContacts","Wrapper","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4PA2DeA,E,4MApDXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,YAAcC,c,EACdC,cAAgBD,c,EAMhBE,gBAAkB,SAAAC,GACd,EAAKC,SAAS,CAAEP,KAAMM,EAAME,cAAcC,S,EAG9CC,kBAAoB,SAAAJ,GAChB,EAAKC,SAAS,CAACN,OAAQK,EAAME,cAAcC,S,EAI/CE,WAAa,SAAAL,GACTA,EAAMM,iBACN,EAAKC,MAAMC,SAAS,EAAKf,MAAMC,KAAM,EAAKD,MAAME,QAChD,EAAKc,S,sDAfLC,KAAKT,SAAS,CAACP,KAAM,GAAIC,OAAQ,O,+BAmBjC,OACA,mCACA,uBAAMa,SAAUE,KAAKL,WAArB,UACI,wBAAOM,QAASD,KAAKd,YAArB,iBAEA,uBAAOgB,GAAIF,KAAKd,YAAaiB,KAAK,OAAOV,MAAOO,KAAKjB,MAAMC,KAAMoB,SAAUJ,KAAKX,gBAAiBgB,UAAQ,OAIjG,wBAAOJ,QAASD,KAAKZ,cAArB,mBAEK,uBAAOc,GAAIF,KAAKZ,cAAee,KAAK,MAAMV,MAAOO,KAAKjB,MAAME,OAAQmB,SAAUJ,KAAKN,kBAAmBW,UAAQ,OAEnH,wBAAQC,UAAWC,IAAEC,IAAKL,KAAK,SAA/B,kC,GA1CMM,aCSXC,EAbA,SAAC,GAAuB,IAAtBjB,EAAqB,EAArBA,MAAOK,EAAc,EAAdA,SACpB,OAAS,qCACL,uDACA,uBAAOK,KAAK,OAAOV,MAAOA,EAAQW,SAAUN,QCH9Ca,EAAc,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,OACI,6BACKD,EAASE,KAAI,gBAAGZ,EAAH,EAAGA,GAAIlB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,+BAAcD,EAAd,IAAqBC,EACjB,wBAAQ8B,QAAS,kBAAMF,EAAUX,IAAjC,sBADKA,SAOzBS,EAAYK,aAAe,CACvBhC,KAAM,GACNC,OAAQ,IAWG0B,QC2CAM,E,4MA7DXlC,MAAQ,CACJ6B,SAAU,CAAE,CAACV,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC5D,CAACiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,aAC7C,CAACiB,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,cAC/CiC,OAAQ,I,EAGNC,QAAU,SAACnC,EAAMC,GACb,IAAMmC,EAAa,CACflB,GAAIf,cACJH,OACAC,UAEEoC,EAAO,EAAKtC,MAAM6B,SAASE,KAAI,SAAAQ,GAAO,OAAIC,OAAOC,OAAQF,EAAQtC,KAAMyC,cAAcC,MAAM,UAI3FC,EAHeJ,OAAOF,KAAKA,GAAMO,QAAO,SAASC,EAAKC,GACxD,OAAOD,EAAIE,OAAOV,EAAKS,MACxB,IAC+BE,SAAShD,EAAKyC,eAChD,EAAKlC,UAAS,gBAAGqB,EAAH,EAAGA,SAAH,MAAmB,CAE7BA,SAAUe,EAAef,EAAH,CAAeQ,GAAf,mBAA8BR,QAGpDe,GACAM,MAAM,GAAD,OAAIjD,EAAJ,6B,EAIbkD,eAAiB,SAAC5C,GACd,EAAKC,SAAS,CAAE2B,OAAQ5B,EAAME,cAAcC,S,EAGhD0C,oBAAsB,WAClB,IAAMC,EAAmB,EAAKrD,MAAMmC,OAAOO,cAE3C,OAAO,EAAK1C,MAAM6B,SAASM,QAAO,SAAAI,GAAO,OAAIA,EAAQtC,KAAKyC,cAAcO,SAASI,IACjFd,EAAQrC,OAAO+C,SAASI,O,EAG5BC,WAAa,SAACnC,GACV,EAAKX,UAAS,SAAA+C,GAAS,MAAK,CACxB1B,SAAU0B,EAAU1B,SAASM,QAAO,SAAAI,GAAO,OAAIA,EAAQpB,KAAOA,U,uDAKtE,IAAMqC,EAAmBvC,KAAKmC,sBAC3B,OAAQ,qBAAK7B,UAAWC,IAAEU,IAAlB,SACP,sBAAKX,UAAWC,IAAEiC,QAAlB,UACN,2CACU,cAAC,EAAD,CAAa1C,SAAUE,KAAKmB,UAEtC,0CACU,cAAC,EAAD,CAAQ1B,MAAOO,KAAKjB,MAAMmC,OAAQpB,SAAWE,KAAKkC,iBAC/C,cAAC,EAAD,CAAatB,SAAU2B,EAAkB1B,UAAWb,KAAKqC,sB,GAxDtD5B,aCFlBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,IAAM,oB","file":"static/js/main.bce45b1b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from '../App.module.css';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n     reset() {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n    \r\n    changeNameInput = event => {\r\n        this.setState({ name: event.currentTarget.value })\r\n    }\r\n\r\n    changeNumberInput = event => {\r\n        this.setState({number: event.currentTarget.value})\r\n    }\r\n\r\n    \r\n    makeSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        this.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n        <form onSubmit={this.makeSubmit}>\r\n            <label htmlFor={this.nameInputId}>\r\n                Name\r\n            <input id={this.nameInputId} type=\"text\" value={this.state.name} onChange={this.changeNameInput} required />\r\n                \r\n                    </label>\r\n                    \r\n                    <label htmlFor={this.numberInputId}>\r\n                        Number\r\n                         <input id={this.numberInputId} type=\"tel\" value={this.state.number} onChange={this.changeNumberInput} required/>\r\n                    </label>\r\n                    <button className={s.Btn} type=\"submit\">Add contact</button>\r\n                </form>\r\n                                </>\r\n    )\r\n}\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onSubmit}) => {\r\n    return ( <>\r\n        <p>Find contacts by name </p>\r\n        <input type=\"text\" value={value}  onChange={onSubmit} />\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, delMethot }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id}>{name}:{number}\r\n                    <button onClick={() => delMethot(id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n\r\n    )\r\n}\r\nContactList.defaultProps = {\r\n    name: '',\r\n    number: '',\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    })),\r\n    delMethot: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './Phonebook/ContactForm';\r\nimport Filter from './Phonebook/Filter';\r\nimport ContactList from './Phonebook/ContactList';\r\nimport s from './App.module.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [ {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\r\n  filter: '', \r\n    }\r\n\r\n    addName = (name, number) => {\r\n        const newContact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number\r\n        }\r\n        const keys = this.state.contacts.map(contact => Object.values((contact.name).toLowerCase().split(', ')))\r\n        const arrayOfNames = Object.keys(keys).reduce(function(acc, key) {\r\n            return acc.concat(keys[key]);\r\n        }, []);\r\n        const repeatedName = arrayOfNames.includes(name.toLowerCase());\r\n        this.setState(({ contacts }) => ({\r\n            \r\n            contacts: repeatedName ? contacts : [newContact, ...contacts]\r\n        }))\r\n\r\n        if (repeatedName) {\r\n            alert(`${name} is already in contacts`)\r\n        }\r\n        }\r\n\r\n    onFilterChange = (event) => {\r\n        this.setState({ filter: event.currentTarget.value })\r\n    };\r\n\r\n    getFilteredContacts = () => {\r\n        const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n        return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter) ||\r\n        contact.number.includes(normalizedFilter))\r\n        }\r\n    \r\n    deleteItem = (id) => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== id)\r\n        }))\r\n    }\r\n    \r\n    render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n       return (<div className={s.App}>\r\n        <div className={s.Wrapper}>\r\n  <h1>Phonebook</h1>\r\n            <ContactForm onSubmit={this.addName} />\r\n\r\n  <h2>Contacts</h2>\r\n            <Filter value={this.state.filter} onSubmit={ this.onFilterChange}/>\r\n               <ContactList contacts={filteredContacts} delMethot={this.deleteItem }/>\r\n</div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__HIgSF\",\"Wrapper\":\"App_Wrapper__3osur\",\"Btn\":\"App_Btn__1V4v8\"};"],"sourceRoot":""}